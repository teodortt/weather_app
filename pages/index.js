import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import React from 'react'
import dynamic from 'next/dynamic'
import AutoComplete from "react-google-autocomplete"
import 'bootstrap/dist/css/bootstrap.min.css';

const Leaflet = dynamic(() => import('./Map'),
  {
    loading: () => <p>Map is loading</p>,
    ssr: false
  }
);


export default function Home() {

  const [city, setCity] = React.useState('plovdiv');
  const [weather, setWeather] = React.useState([]);
  const [val, setVal] = React.useState();
  const [celsius, setCelsius] = React.useState(false);



  const data = () => {

    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=2ac597dfa6e78bc7452bebd703abecd6`)
      .then(response => response.json())
      .then(data => setWeather(data))

  }

  React.useEffect(() => {
    data();
  }, [city])

  function handleChange(place) {
    // e.preventDefault();
    setCity(place)
    console.log(place)
  }

  function toCelsius(fahrenheit) {
    let num = String(fahrenheit - 273.15);
    return (num.slice(0, 4))
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        {/* <link href='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css' rel='stylesheet' /> */}

      </Head>

      <main>

        <div className="container mx-auto text-center bg-primary rounded h-100">

          {weather.coord ?
          <>

              {/* <form> */}
              {/* <input type="text" onChange={() => setVal(event.target.value)} /> */}
              <AutoComplete
                apiKey='AIzaSyCUC1GLRPbi7OPn8mTfN-NfvY5H6NG_UzY'
                onPlaceSelected={(place) => handleChange(place.formatted_address)}
              />

              {/* <button onClick={handleChange}>Search</button>
              </form> */}

              <table class="table mt-3  text-white">
                <thead class="thead-dark">
                  <tr>
                    <th scope="col">Location</th>
                    <th scope="col">Sky</th>
                    <th scope="col">Description</th>
                    <th scope="col">Lon</th>
                    <th scope="col">Lat</th>
                    <th scope="col">Feels Like</th>
                    <th scope="col">Humidity</th>
                    <th scope="col">Units</th>
                    <th scope="col">Wind Speed</th>
                    <th scope="col">Current Temperature</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>{weather.name}</td>
                    <td>{weather.weather[0].main}</td>
                    <td>{weather.weather[0].description}</td>
                    <td>{weather.coord.lon}</td>
                    <td>{weather.coord.lat}</td>
                    <td>{celsius ? toCelsius(weather.main.feels_like) : weather.main.feels_like}</td>
                    <td>{weather.main.humidity}</td>
                    <td><button className="btn btn-success" onClick={() => setCelsius(!celsius)}>{!celsius ? 'To celsius' : 'To calvins'}</button></td>
                    <td>{weather.wind.speed} km/h</td>
                    <td><img src={`http://openweathermap.org/img/w/${weather.weather[0].icon}.png`} />
                      {celsius ? toCelsius(weather.main.temp) + ' celsius' : weather.main.temp + ' kalvins'}
                    </td>
                  </tr>
                </tbody>
              </table>

              <div className="w-100 rounded">
                <Leaflet lon={weather.coord.lon} lat={weather.coord.lat} />
              </div>
</>
: 

<>
<AutoComplete
apiKey='AIzaSyCUC1GLRPbi7OPn8mTfN-NfvY5H6NG_UzY'
onPlaceSelected={(place) => handleChange(place.formatted_address)}
/>

  {weather.cod && 'Location not found!'}
  </>
}

        </div>
      </main>

    </div>
  )
}